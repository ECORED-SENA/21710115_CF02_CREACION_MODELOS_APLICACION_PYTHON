{"version":3,"sources":["webpack:///./src/assets/curso/temas/tema3/7.png","webpack:///./src/assets/curso/temas/tema3/6.png","webpack:///./src/assets/curso/temas/tema3/1.png","webpack:///./src/assets/curso/temas/tema3/2.png","webpack:///./src/assets/curso/temas/tema3/4.png","webpack:///./src/assets/curso/temas/tema3/3.png","webpack:///./src/assets/curso/temas/tema3/5.png","webpack:///./src/views/Tema3.vue?5777","webpack:///src/views/Tema3.vue","webpack:///./src/views/Tema3.vue?2275","webpack:///./src/views/Tema3.vue"],"names":["module","exports","render","_vm","this","_h","$createElement","_c","_self","staticClass","_m","staticStyle","_v","staticRenderFns","attrs","name","data","mounted","$nextTick","updated","$aosRefresh","component"],"mappings":"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","file":"js/tema3.8ae41e67.js","sourcesContent":["module.exports = __webpack_public_path__ + \"img/7.a5af9528.png\";","module.exports = __webpack_public_path__ + \"img/6.256e2e53.png\";","module.exports = __webpack_public_path__ + \"img/1.b8e93214.png\";","module.exports = __webpack_public_path__ + \"img/2.60f2b9c0.png\";","module.exports = __webpack_public_path__ + \"img/4.0ab68616.png\";","module.exports = __webpack_public_path__ + \"img/3.2297f79b.png\";","module.exports = __webpack_public_path__ + \"img/5.8d8483fc.png\";","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"curso-main-container pb-3\"},[_c('BannerInterno'),_c('div',{staticClass:\"container tarjeta tarjeta--blanca p-4 p-md-5 mb-5\"},[_vm._m(0),_vm._m(1),_vm._m(2),_c('div',{staticClass:\"row justify-content-center mb-5\"},[_c('div',{staticClass:\"col-lg-10\"},[_c('div',{staticClass:\"p-5\",staticStyle:{\"background-color\":\"#dbefed\"}},[_vm._m(3),_vm._m(4),_vm._m(5),_vm._m(6),_vm._m(7),_vm._m(8),_vm._m(9),_vm._m(10),_vm._m(11),_vm._m(12),_vm._m(13),_vm._m(14),_vm._m(15),_vm._m(16),_vm._m(17),_vm._m(18),_vm._m(19),_c('P',[_vm._v(\"Ahora se deben convertir las etiquetas de salida: para que la máquina entienda los datos se procede con las transformaciones de las etiquetas normal y malicioso, la estrategia sería asignarle un número a cada una de estas de la siguiente manera:\")]),_vm._m(20),_vm._m(21),_vm._m(22),_c('p',{staticClass:\"mb-5\"},[_vm._v(\"Como se aprecia en la columna salida ya se visualiza la información correspondiente a 0 para la etiqueta Normal y 1 para la etiqueta Malicioso.\")]),_vm._m(23),_vm._m(24),_vm._m(25)],1)])])])],1)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"titulo-principal color-acento-contenido\"},[_c('div',{staticClass:\"titulo-principal__numero\"},[_c('span',[_vm._v(\"3\")])]),_c('h1',[_vm._v(\"Preprocesamiento de los datos con Python\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"row justify-content-center mb-5\"},[_c('div',{staticClass:\"col-lg-4 col-8 mb-lg-0 mb-3\",attrs:{\"data-aos\":\"fade-right\"}},[_c('img',{attrs:{\"src\":require(\"@/assets/curso/temas/tema3/1.png\"),\"alt\":\"\"}})]),_c('div',{staticClass:\"col-lg-8\",attrs:{\"data-aos\":\"fade-left\"}},[_c('p',[_vm._v(\"Con el análisis exploratorio de los datos, se va haciendo una idea de cuáles serán las variables objetivas y de cuáles serán los atributos para el aprendizaje; de igual manera, se podrá determinar las correcciones necesarias que se deben realizar a los datos.\"),_c('br'),_c('br'),_vm._v(\"Se debe recordar que el objetivo es realizar un modelo que permita la detección de mensajes de correo electrónico y los clasifique como mensajes normales o maliciosos. Con esta premisa y el análisis que se ha realizado previamente se procede con los pasos para el preprocesamiento de los datos, tal y como se exponen a continuación.\")])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"titulo-circulo mb-4\",attrs:{\"data-aos\":\"fade-right\"}},[_c('h3',[_vm._v(\"Preprocesamiento de los datos\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"titulo-pasos mb-3\"},[_c('h4',{staticClass:\"mb-0\"},[_vm._v(\"Paso 1\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',{staticClass:\"mb-5\",attrs:{\"data-aos\":\"fade-right\"}},[_vm._v(\"Definir los atributos que harán parte del análisis: para este caso, aunque se tienen cuatro columnas, el análisis se va a centrar en la columna mensaje como análisis para el entrenamiento, y como variable objetivo o resultante será la columna salida.\"),_c('br'),_c('br'),_vm._v(\"Lo que quiere decir que solamente se debe dejar en la colección de datos esas dos columnas, para realizar este proceso se debe ejecutar el siguiente comando.\"),_c('br'),_c('br'),_c('code',{staticClass:\"codigo\"},[_vm._v(\" df=df.drop(['Unnamed: 0', 'fecha', 'ciudad'], axis=1) \")]),_c('br'),_c('br'),_vm._v(\"Este comando permite eliminar del \"),_c('em',[_vm._v(\"dataframe\")]),_vm._v(\" las columnas que no se quieren analizar, solamente dejando nuestra variable objetivo y las de análisis. Si se ejecuta el comando \"),_c('code',{staticClass:\"codigo\"},[_vm._v(\"df.head()\")]),_vm._v(\", se debe obtener el resultado de las primeras 5 filas, pero ya solamente de las dos columnas seleccionadas:\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"row justify-content-center mb-5\"},[_c('div',{staticClass:\"col-lg-6\"},[_c('img',{attrs:{\"src\":require(\"@/assets/curso/temas/tema3/2.png\"),\"alt\":\"Captura de pantalla al eliminar columnas.\"}})])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"titulo-pasos mb-3\"},[_c('h4',{staticClass:\"mb-0\"},[_vm._v(\"Paso 2\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"Eliminar valores nulos: en la exploración de los datos se encontró que en la columna mensaje existen registros nulos, de manera que para este caso se procede con la eliminación de estos registros, aunque esta no es la única decisión.\"),_c('br'),_c('br'),_vm._v(\"En este caso son pocos registros y tomaremos la decisión de quitarlos de nuestra colección de datos.\"),_c('br'),_c('br'),_vm._v(\"Para proceder ejecute las siguientes líneas de comando.\"),_c('br'),_c('br'),_c('code',{staticClass:\"codigo\"},[_vm._v(\"df=df.dropna()\")]),_c('br'),_c('br'),_vm._v(\"Con este comando se eliminarán todas las filas si en cualquiera de sus atributos o columnas encuentra un valor nulo. Recordemos que el total de registros era de 5572, una vez ejecutado el comando el resultado obtenido es el siguiente, con el comando \"),_c('em',[_vm._v(\"shape\")]),_vm._v(\" rápidamente se puede ver el total de registros y el total de columnas.\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"row justify-content-center mb-5\"},[_c('div',{staticClass:\"col-lg-6\"},[_c('img',{attrs:{\"src\":require(\"@/assets/curso/temas/tema3/3.png\"),\"alt\":\"Captura de pantalla al eliminar columnas.\"}})])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"titulo-pasos mb-3\"},[_c('h4',{staticClass:\"mb-0\"},[_vm._v(\"Paso 3\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',{staticClass:\"mb-5\"},[_vm._v(\"Para el ejemplo, la variable objetivo es un texto de tipo categórico y es necesario que se realice su transformación para que puedan ser procesados por los algoritmos de clasificación que implementaremos.\"),_c('br'),_c('br'),_vm._v(\"La variable que se utilizará para realizar el aprendizaje corresponde a los mensajes y para realizar la adecuación de estos es la librería \"),_c('b',[_vm._v(\"nltk\")]),_c('br'),_c('br'),_c('code',{staticClass:\"codigo\"},[_vm._v(\"import nltk\"),_c('br'),_vm._v(\"nltk.download(\\\"punkt\\\")\"),_c('br'),_vm._v(\"import warnings warnings.filterwarnings('ignore')\"),_c('br'),_vm._v(\"from wordcloud import WordCloud\")]),_c('br'),_c('br'),_vm._v(\"Como primer análisis de los mensajes se creará una nube de palabras que permitan identificar cuáles de ellas hacen parte de los mensajes normales y cuáles de los mensajes maliciosos.\"),_c('br'),_c('br'),_vm._v(\"Primero se deben ver dos variables vacías de la siguiente manera.\"),_c('br'),_c('br'),_c('code',{staticClass:\"codigo\"},[_vm._v(\"palabrasNormales = '' \"),_c('br'),_vm._v(\" palabraMaliciosos = ''\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"titulo-pasos mb-3\"},[_c('h4',{staticClass:\"mb-0\"},[_vm._v(\"Paso 4\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',{staticClass:\"mb-5\"},[_vm._v(\"Posteriormente se debe recorrer el \"),_c('em',[_vm._v(\"dataframe\")]),_vm._v(\" en busca de los mensajes que coincidan con las etiquetas Malicioso, de la siguiente manera.\"),_c('br'),_c('br'),_c('code',{staticClass:\"codigo\"},[_vm._v(\" for mensaje in df[df['salida'] == 'Malicioso'].mensaje: \")]),_c('br'),_c('code',{staticClass:\"codigo ps-4\"},[_vm._v(\"texto = mensaje.lower()\")]),_c('br'),_c('code',{staticClass:\"codigo ps-4\"},[_vm._v(\"tokens = nltk.word_tokenize(texto)\")]),_c('br'),_c('code',{staticClass:\"codigo ps-4\"},[_vm._v(\"for palabras in tokens:\")]),_c('br'),_c('code',{staticClass:\"codigo ps-4\"},[_vm._v(\"palabrasMalicioso = palabrasMalicioso + palabras + ' '\")]),_c('br'),_c('br'),_c('code',{staticClass:\"codigo\"},[_vm._v(\"for mensaje in df[df['salida'] == 'Malicioso'].mensaje\")]),_vm._v(\" recorre cada elemento en los cuales la etiqueta de la columna salida coincide con Malicioso.\"),_c('br'),_c('br'),_c('code',{staticClass:\"codigo\"},[_vm._v(\"texto = mensaje.lower()\")]),_vm._v(\" convierte cada una de las coincidencias en minúscula.\"),_c('br'),_c('br'),_c('code',{staticClass:\"codigo\"},[_vm._v(\"tokens = nltk.word_tokenize(texto)\")]),_vm._v(\" separa el mensaje en una lista de todas las palabras que la conforman.\"),_c('br'),_c('br'),_c('code',{staticClass:\"codigo\"},[_vm._v(\"for palabras in tokens\")]),_vm._v(\" recorre cada una de las palabras para ser almacenadas en una sola cadena de texto.\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"titulo-pasos mb-3\"},[_c('h4',{staticClass:\"mb-0\"},[_vm._v(\"Paso 5\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',{staticClass:\"mb-5\"},[_vm._v(\"El objetivo de implementar dicho código es tomar todos los mensajes que coincidan con la etiqueta de salida malicioso, convertirlas a minúsculas para estandarizar todos los textos, luego separar cada palabra en una sola cadena de texto, que servirá para analizar cuál de las palabras tienen mayor representación.\"),_c('br'),_c('br'),_vm._v(\"Una vez con todas las palabras en una sola cadena de texto se procede a generar la nube de palabras.\"),_c('br'),_c('br'),_c('code',{staticClass:\"codigo\"},[_vm._v(\"cloudMalicioso = WordCloud(width=500, height=300,\"),_c('br'),_vm._v(\"background_color='white').generate(palabrasMalicioso)\")]),_c('br'),_c('br'),_vm._v(\"La variable la denominamos cloudMalicioso y con la librería WordCloud, generamos la nube de palabras con la variable que previamente ya hemos usado para tal fin denominada: palabrasMalicioso\"),_c('br'),_c('br'),_vm._v(\"Se procede con la gráfica implementando los siguientes códigos.\"),_c('br'),_c('br'),_c('code',{staticClass:\"codigo \"},[_vm._v(\"plt.figure( figsize=(10,8))\"),_c('br'),_vm._v(\"plt.imshow(cloudMalicioso)\"),_c('br'),_vm._v(\"plt.axis(\\\"off\\\")\"),_c('br'),_vm._v(\"plt.tight_layout(pad=0)\"),_c('br'),_vm._v(\"plt.show()\")]),_c('br'),_c('br'),_vm._v(\"El resultado de ejecutar las siguientes líneas de código será la representación de nube de palabras como se aprecia en la imagen.\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"row justify-content-center mb-5\"},[_c('div',{staticClass:\"col-lg-6\"},[_c('img',{attrs:{\"src\":require(\"@/assets/curso/temas/tema3/4.png\"),\"alt\":\"Captura de pantalla de una representación visual de nubes de palabras, como resultado del código ejecutado.\"}})])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"titulo-pasos mb-3\"},[_c('h4',{staticClass:\"mb-0\"},[_vm._v(\"Paso 6\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"Se realiza el mismo procedimiento, pero esta vez detectando los mensajes de los correos que están marcados como Normal, el código quedaría de la siguiente manera.\"),_c('br'),_c('br'),_c('code',{staticClass:\"codigo\"},[_vm._v(\" for mensaje in df[df['salida'] == 'Normal'].mensaje:\"),_c('br'),_c('span',{staticClass:\"ps-2\"},[_vm._v(\"texto = mensaje.lower()\")]),_c('br'),_c('span',{staticClass:\"ps-2\"},[_vm._v(\"tokens = nltk.word_tokenize(texto)\")]),_c('br'),_c('span',{staticClass:\"ps-2\"},[_vm._v(\"for palabras in tokens:\")]),_c('br'),_c('span',{staticClass:\"ps-4\"},[_vm._v(\"palabrasNormal = palabrasNormal + palabras + ' '\")]),_c('br'),_c('br'),_vm._v(\"cloudNormal = WordCloud(width=500, height=300,\"),_c('br'),_vm._v(\"background_color='white').generate(palabrasNormal)\"),_c('br'),_c('br'),_vm._v(\"plt.figure( figsize=(10,8))\"),_c('br'),_vm._v(\"plt.imshow(cloudNormal)\"),_c('br'),_vm._v(\"plt.axis(\\\"off\\\")\"),_c('br'),_vm._v(\"plt.tight_layout(pad=0)\"),_c('br'),_vm._v(\"plt.show()\")]),_vm._v(\" \"),_c('br'),_c('br'),_vm._v(\"Y la nube de palabras que se obtiene para este caso es la siguiente:\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"row justify-content-center mb-5\"},[_c('div',{staticClass:\"col-lg-6\"},[_c('img',{staticClass:\"mb-4\",attrs:{\"src\":require(\"@/assets/curso/temas/tema3/5.png\"),\"alt\":\"Captura de pantalla de una representación visual de nubes de palabras, como resultado del código ejecutado en este paso.\"}}),_c('p',[_vm._v(\"Se puede observar comparando las dos nubes de palabras que la que más se repite es la palabra \"),_c('em',[_vm._v(\"free\")]),_vm._v(\" (gratis), en los mensajes de correos marcados como maliciosos.\")])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"titulo-pasos mb-3\"},[_c('h4',{staticClass:\"mb-0\"},[_vm._v(\"Paso 7\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"row justify-content-center mb-5\"},[_c('div',{staticClass:\"col-lg-6\"},[_c('table',{staticClass:\"text-center\"},[_c('tr',{staticClass:\"fw-bold bg-white\"},[_c('td',{staticStyle:{\"border\":\"1px solid #8054f8\"}},[_vm._v(\"Etiqueta\")]),_c('td',{staticStyle:{\"border\":\"1px solid #8054f8\"}},[_vm._v(\"Valor\")])]),_c('tr',{staticClass:\"bg-white\"},[_c('td',{staticStyle:{\"border\":\"1px solid #8054f8\"}},[_vm._v(\"Normal\")]),_c('td',{staticStyle:{\"border\":\"1px solid #8054f8\"}},[_vm._v(\"0\")])]),_c('tr',{staticClass:\"bg-white\"},[_c('td',{staticStyle:{\"border\":\"1px solid #8054f8\"}},[_vm._v(\"Malicioso\")]),_c('td',{staticStyle:{\"border\":\"1px solid #8054f8\"}},[_vm._v(\"1\")])])])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"Para realizar la transformación de estos datos ejecute la siguiente línea de comandos.\"),_c('br'),_c('br'),_c('code',{staticClass:\"codigo\"},[_vm._v(\"df = df.replace(['Normal','Malicioso'],[0, 1])\"),_c('br'),_vm._v(\"df.head(10)\")]),_c('br'),_c('br'),_vm._v(\"El resultado se puede observar en la imagen\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"row justify-content-center mb-5\"},[_c('div',{staticClass:\"col-lg-6\"},[_c('img',{attrs:{\"src\":require(\"@/assets/curso/temas/tema3/6.png\"),\"alt\":\"Captura de pantalla en el que se evidencia la información de acuerdo a la etiqueta\"}})])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"titulo-pasos mb-3\"},[_c('h4',{staticClass:\"mb-0\"},[_vm._v(\"Paso 8\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',{staticClass:\"mb-4\"},[_vm._v(\"Ahora se debe eliminar la información que no aporta nada para el modelo, de tal manera que se procede con la eliminación de los signos de puntuación, y de las palabras vacías, para ello se hace uso de la librería NTKL.\"),_c('br'),_c('br'),_c('code',{staticClass:\"codigo\"},[_vm._v(\"import nltk\"),_c('br'),_vm._v(\"from nltk.corpus import stopwords\"),_c('br'),_vm._v(\"import string\"),_c('br'),_c('br'),_vm._v(\"def eliminarPuntuacion(texto):\"),_c('br'),_c('br'),_vm._v(\"texto = texto.translate(str.maketrans('', '', string.punctuation))\"),_c('br'),_vm._v(\"texto = [word for word in texto.split() if word.lower() not in\"),_c('br'),_vm._v(\"stopwords.words('english')]\"),_c('br'),_c('br'),_vm._v(\"return \\\" \\\".join(texto)\"),_c('br'),_c('br'),_vm._v(\"df['mensaje'] = df['mensaje'].apply(eliminarPuntuacion)\"),_c('br'),_vm._v(\"df\")]),_c('br'),_c('br'),_vm._v(\"El resultado se puede ver comparando los resultados antes y después de la depuración:\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"row justify-content-center mb-5\"},[_c('div',{staticClass:\"col-lg-6\"},[_c('img',{attrs:{\"src\":require(\"@/assets/curso/temas/tema3/7.png\"),\"alt\":\"Captura de pantalla al hacer uso de la librería NTKL\"}})])])}]\n\nexport { render, staticRenderFns }","<template lang=\"pug\">\n.curso-main-container.pb-3\n  BannerInterno\n  .container.tarjeta.tarjeta--blanca.p-4.p-md-5.mb-5\n    .titulo-principal.color-acento-contenido\n      .titulo-principal__numero\n        span 3\n      h1 Preprocesamiento de los datos con Python\n    .row.justify-content-center.mb-5\n      .col-lg-4.col-8.mb-lg-0.mb-3(data-aos=\"fade-right\"): img(src='@/assets/curso/temas/tema3/1.png', alt='')\n      .col-lg-8(data-aos=\"fade-left\") \n        p Con el análisis exploratorio de los datos, se va haciendo una idea de cuáles serán las variables objetivas y de cuáles serán los atributos para el aprendizaje; de igual manera, se podrá determinar las correcciones necesarias que se deben realizar a los datos.\n          br\n          br\n          |Se debe recordar que el objetivo es realizar un modelo que permita la detección de mensajes de correo electrónico y los clasifique como mensajes normales o maliciosos. Con esta premisa y el análisis que se ha realizado previamente se procede con los pasos para el preprocesamiento de los datos, tal y como se exponen a continuación.\n    .titulo-circulo.mb-4(data-aos=\"fade-right\")\n      h3 Preprocesamiento de los datos\n    .row.justify-content-center.mb-5\n      .col-lg-10\n        div.p-5(style=\"background-color: #dbefed \")\n          .titulo-pasos.mb-3\n            h4.mb-0 Paso 1\n          p.mb-5(data-aos='fade-right') Definir los atributos que harán parte del análisis: para este caso, aunque se tienen cuatro columnas, el análisis se va a centrar en la columna mensaje como análisis para el entrenamiento, y como variable objetivo o resultante será la columna salida.\n            br\n            br\n            |Lo que quiere decir que solamente se debe dejar en la colección de datos esas dos columnas, para realizar este proceso se debe ejecutar el siguiente comando.\n            br\n            br\n            | <code class=\"codigo\"> df=df.drop(['Unnamed: 0', 'fecha', 'ciudad'], axis=1) </code>\n            br\n            br\n            |Este comando permite eliminar del #[em dataframe] las columnas que no se quieren analizar, solamente dejando nuestra variable objetivo y las de análisis. Si se ejecuta el comando #[code.codigo df.head()], se debe obtener el resultado de las primeras 5 filas, pero ya solamente de las dos columnas seleccionadas:\n          .row.justify-content-center.mb-5\n            .col-lg-6: img(src='@/assets/curso/temas/tema3/2.png', alt='Captura de pantalla al eliminar columnas.')\n          .titulo-pasos.mb-3\n            h4.mb-0 Paso 2\n          p Eliminar valores nulos: en la exploración de los datos se encontró que en la columna mensaje existen registros nulos, de manera que para este caso se procede con la eliminación de estos registros, aunque esta no es la única decisión.\n            br\n            br\n            |En este caso son pocos registros y tomaremos la decisión de quitarlos de nuestra colección de datos.\n            br\n            br\n            |Para proceder ejecute las siguientes líneas de comando.\n            br\n            br\n            | #[code.codigo df=df.dropna()]\n            br\n            br\n            |Con este comando se eliminarán todas las filas si en cualquiera de sus atributos o columnas encuentra un valor nulo. Recordemos que el total de registros era de 5572, una vez ejecutado el comando el resultado obtenido es el siguiente, con el comando #[em shape] rápidamente se puede ver el total de registros y el total de columnas.\n          .row.justify-content-center.mb-5\n            .col-lg-6: img(src='@/assets/curso/temas/tema3/3.png', alt='Captura de pantalla al eliminar columnas.')\n          .titulo-pasos.mb-3\n            h4.mb-0 Paso 3\n          p.mb-5 Para el ejemplo, la variable objetivo es un texto de tipo categórico y es necesario que se realice su transformación para que puedan ser procesados por los algoritmos de clasificación que implementaremos.\n            br\n            br\n            |La variable que se utilizará para realizar el aprendizaje corresponde a los mensajes y para realizar la adecuación de estos es la librería #[b nltk]\n            br\n            br\n            |<code class=\"codigo\">import nltk<br>nltk.download(\"punkt\")<br>import warnings warnings.filterwarnings('ignore')<br>from wordcloud import WordCloud</code>\n            br\n            br\n            |Como primer análisis de los mensajes se creará una nube de palabras que permitan identificar cuáles de ellas hacen parte de los mensajes normales y cuáles de los mensajes maliciosos.\n            br\n            br\n            |Primero se deben ver dos variables vacías de la siguiente manera.\n            br\n            br\n            |<code class=\"codigo\">palabrasNormales = '' <br> palabraMaliciosos = ''</code>\n          .titulo-pasos.mb-3\n            h4.mb-0 Paso 4\n          p.mb-5 Posteriormente se debe recorrer el #[em dataframe] en busca de los mensajes que coincidan con las etiquetas Malicioso, de la siguiente manera.\n              br\n              br\n\n              | <code class=\"codigo\"> for mensaje in df[df['salida'] == 'Malicioso'].mensaje: </code>\n              br\n              | #[code.codigo.ps-4 texto = mensaje.lower()]\n              br\n              | #[code.codigo.ps-4 tokens = nltk.word_tokenize(texto)]\n              br\n              | #[code.codigo.ps-4 for palabras in tokens:]\n              br\n              | #[code.codigo.ps-4 palabrasMalicioso = palabrasMalicioso + palabras + ' ']\n              br\n              br \n              | <code class=\"codigo\">for mensaje in df[df['salida'] == 'Malicioso'].mensaje</code>   recorre cada elemento en los cuales la etiqueta de la columna salida coincide con Malicioso.\n              br\n              br \n              | #[code.codigo texto = mensaje.lower()]   convierte cada una de las coincidencias en minúscula.\n              br\n              br \n              | #[code.codigo tokens = nltk.word_tokenize(texto)]   separa el mensaje en una lista de todas las palabras que la conforman.\n              br\n              br \n              | #[code.codigo for palabras in tokens]   recorre cada una de las palabras para ser almacenadas en una sola cadena de texto.\n          .titulo-pasos.mb-3\n            h4.mb-0 Paso 5\n          p.mb-5 El objetivo de implementar dicho código es tomar todos los mensajes que coincidan con la etiqueta de salida malicioso, convertirlas a minúsculas para estandarizar todos los textos, luego separar cada palabra en una sola cadena de texto, que servirá para analizar cuál de las palabras tienen mayor representación.\n            br\n            br\n            |Una vez con todas las palabras en una sola cadena de texto se procede a generar la nube de palabras.\n            br\n            br\n            |<code class=\"codigo\">cloudMalicioso = WordCloud(width=500, height=300,<br>background_color='white').generate(palabrasMalicioso)</code>\n            br\n            br\n            |La variable la denominamos cloudMalicioso y con la librería WordCloud, generamos la nube de palabras con la variable que previamente ya hemos usado para tal fin denominada: palabrasMalicioso\n            br\n            br\n            |Se procede con la gráfica implementando los siguientes códigos.\n            br\n            br\n            |<code class=\"codigo \">plt.figure( figsize=(10,8))<br>plt.imshow(cloudMalicioso)<br>plt.axis(\"off\")<br>plt.tight_layout(pad=0)<br>plt.show()</code>\n            br\n            br\n            |El resultado de ejecutar las siguientes líneas de código será la representación de nube de palabras como se aprecia en la imagen.\n          .row.justify-content-center.mb-5\n            .col-lg-6: img(src='@/assets/curso/temas/tema3/4.png', alt='Captura de pantalla de una representación visual de nubes de palabras, como resultado del código ejecutado.')\n          .titulo-pasos.mb-3\n            h4.mb-0 Paso 6\n          p Se realiza el mismo procedimiento, pero esta vez detectando los mensajes de los correos que están marcados como Normal, el código quedaría de la siguiente manera.\n            br\n            br\n            <code class='codigo'> for mensaje in df[df['salida'] == 'Normal'].mensaje:\n              br\n              | #[span.ps-2 texto = mensaje.lower()]\n              br\n              | #[span.ps-2 tokens = nltk.word_tokenize(texto)]\n              br\n              | #[span.ps-2 for palabras in tokens:]\n              br\n              | #[span.ps-4 palabrasNormal = palabrasNormal + palabras + ' ']\n              br\n              br\n              |cloudNormal = WordCloud(width=500, height=300,\n              br\n              |background_color='white').generate(palabrasNormal)\n              br\n              br\n              |plt.figure( figsize=(10,8))\n              br\n              |plt.imshow(cloudNormal)\n              br\n              |plt.axis(\"off\")\n              br\n              |plt.tight_layout(pad=0)\n              br\n              |plt.show()</code>  \n            br\n            br\n            | Y la nube de palabras que se obtiene para este caso es la siguiente:\n          .row.justify-content-center.mb-5\n            .col-lg-6\n              img.mb-4(src='@/assets/curso/temas/tema3/5.png', alt='Captura de pantalla de una representación visual de nubes de palabras, como resultado del código ejecutado en este paso.')\n              p Se puede observar comparando las dos nubes de palabras que la que más se repite es la palabra #[em free] (gratis), en los mensajes de correos marcados como maliciosos.\n          .titulo-pasos.mb-3\n            h4.mb-0 Paso 7\n          P Ahora se deben convertir las etiquetas de salida: para que la máquina entienda los datos se procede con las transformaciones de las etiquetas normal y malicioso, la estrategia sería asignarle un número a cada una de estas de la siguiente manera:\n          .row.justify-content-center.mb-5\n            .col-lg-6\n              table.text-center\n                tr.fw-bold.bg-white\n                  td(style='border: 1px solid #8054f8') Etiqueta\n                  td(style='border: 1px solid #8054f8') Valor\n                tr.bg-white\n                  td(style='border: 1px solid #8054f8') Normal\n                  td(style='border: 1px solid #8054f8') 0\n                tr.bg-white\n                  td(style='border: 1px solid #8054f8') Malicioso\n                  td(style='border: 1px solid #8054f8') 1\n          p Para realizar la transformación de estos datos ejecute la siguiente línea de comandos.\n            br      \n            br      \n            |<code class=\"codigo\">df = df.replace(['Normal','Malicioso'],[0, 1])\n            br\n            |df.head(10)</code>\n            br\n            br\n            |El resultado se puede observar en la imagen\n          .row.justify-content-center.mb-5\n            .col-lg-6: img(src='@/assets/curso/temas/tema3/6.png', alt='Captura de pantalla en el que se evidencia la información de acuerdo a la etiqueta')\n          p.mb-5 Como se aprecia en la columna salida ya se visualiza la información correspondiente a 0 para la etiqueta Normal y 1 para la etiqueta Malicioso.\n          .titulo-pasos.mb-3\n            h4.mb-0 Paso 8\n          p.mb-4 Ahora se debe eliminar la información que no aporta nada para el modelo, de tal manera que se procede con la eliminación de los signos de puntuación, y de las palabras vacías, para ello se hace uso de la librería NTKL.\n            br\n            br\n\n            |<code class=\"codigo\">import nltk\n            br\n            |from nltk.corpus import stopwords\n            br\n            |import string\n            br\n            br\n            |def eliminarPuntuacion(texto):\n            br\n            br\n            |texto = texto.translate(str.maketrans('', '', string.punctuation))\n            br\n            |texto = [word for word in texto.split() if word.lower() not in\n            br\n            |stopwords.words('english')]\n            br\n            br\n            |return \" \".join(texto)\n            br\n            br\n            |df['mensaje'] = df['mensaje'].apply(eliminarPuntuacion)\n            br\n            |df</code>\n            br\n            br\n            |El resultado se puede ver comparando los resultados antes y después de la depuración:\n          .row.justify-content-center.mb-5\n            .col-lg-6: img(src='@/assets/curso/temas/tema3/7.png', alt='Captura de pantalla al hacer uso de la librería NTKL')\n\n\n\n</template>\n\n<script>\nexport default {\n  name: 'Tema3',\n  data: () => ({\n    // variables de vue\n  }),\n  mounted() {\n    this.$nextTick(() => {\n      this.$aosRefresh()\n    })\n  },\n  updated() {\n    this.$aosRefresh()\n  },\n}\n</script>\n\n<style lang=\"sass\"></style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--11-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Tema3.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--11-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Tema3.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Tema3.vue?vue&type=template&id=df95d5ee&lang=pug&\"\nimport script from \"./Tema3.vue?vue&type=script&lang=js&\"\nexport * from \"./Tema3.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}